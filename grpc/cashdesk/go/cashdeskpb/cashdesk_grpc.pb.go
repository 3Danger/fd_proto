// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.22.3
// source: grpc/cashdesk/cashdesk.proto

package cashdeskpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CashdeskClient is the client API for Cashdesk service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CashdeskClient interface {
	GetData(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type cashdeskClient struct {
	cc grpc.ClientConnInterface
}

func NewCashdeskClient(cc grpc.ClientConnInterface) CashdeskClient {
	return &cashdeskClient{cc}
}

func (c *cashdeskClient) GetData(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CashdeskServer is the server API for Cashdesk service.
// All implementations must embed UnimplementedCashdeskServer
// for forward compatibility
type CashdeskServer interface {
	GetData(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	mustEmbedUnimplementedCashdeskServer()
}

// UnimplementedCashdeskServer must be embedded to have forward compatible implementations.
type UnimplementedCashdeskServer struct {
}

func (UnimplementedCashdeskServer) GetData(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (UnimplementedCashdeskServer) mustEmbedUnimplementedCashdeskServer() {}

// UnsafeCashdeskServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CashdeskServer will
// result in compilation errors.
type UnsafeCashdeskServer interface {
	mustEmbedUnimplementedCashdeskServer()
}

func RegisterCashdeskServer(s grpc.ServiceRegistrar, srv CashdeskServer) {
	s.RegisterService(&Cashdesk_ServiceDesc, srv)
}

func _Cashdesk_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CashdeskServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CashdeskServer).GetData(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// Cashdesk_ServiceDesc is the grpc.ServiceDesc for Cashdesk service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Cashdesk_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk",
	HandlerType: (*CashdeskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _Cashdesk_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc/cashdesk/cashdesk.proto",
}
