// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.3
// source: grpc/cashdesk/cashdesk.proto

package cashdeskpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreamWorkstationEventsResponse_EVENT_TITLE int32

const (
	StreamWorkstationEventsResponse_PURCHASE       StreamWorkstationEventsResponse_EVENT_TITLE = 0
	StreamWorkstationEventsResponse_REFUND         StreamWorkstationEventsResponse_EVENT_TITLE = 1
	StreamWorkstationEventsResponse_CLOSE_SHIFT    StreamWorkstationEventsResponse_EVENT_TITLE = 2
	StreamWorkstationEventsResponse_REPORT         StreamWorkstationEventsResponse_EVENT_TITLE = 3
	StreamWorkstationEventsResponse_CASH_IN        StreamWorkstationEventsResponse_EVENT_TITLE = 4
	StreamWorkstationEventsResponse_CASH_OUT       StreamWorkstationEventsResponse_EVENT_TITLE = 5
	StreamWorkstationEventsResponse_CONTINUE_PRINT StreamWorkstationEventsResponse_EVENT_TITLE = 6
	StreamWorkstationEventsResponse_CANCEL_CHECK   StreamWorkstationEventsResponse_EVENT_TITLE = 7
)

// Enum value maps for StreamWorkstationEventsResponse_EVENT_TITLE.
var (
	StreamWorkstationEventsResponse_EVENT_TITLE_name = map[int32]string{
		0: "PURCHASE",
		1: "REFUND",
		2: "CLOSE_SHIFT",
		3: "REPORT",
		4: "CASH_IN",
		5: "CASH_OUT",
		6: "CONTINUE_PRINT",
		7: "CANCEL_CHECK",
	}
	StreamWorkstationEventsResponse_EVENT_TITLE_value = map[string]int32{
		"PURCHASE":       0,
		"REFUND":         1,
		"CLOSE_SHIFT":    2,
		"REPORT":         3,
		"CASH_IN":        4,
		"CASH_OUT":       5,
		"CONTINUE_PRINT": 6,
		"CANCEL_CHECK":   7,
	}
)

func (x StreamWorkstationEventsResponse_EVENT_TITLE) Enum() *StreamWorkstationEventsResponse_EVENT_TITLE {
	p := new(StreamWorkstationEventsResponse_EVENT_TITLE)
	*p = x
	return p
}

func (x StreamWorkstationEventsResponse_EVENT_TITLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamWorkstationEventsResponse_EVENT_TITLE) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[0].Descriptor()
}

func (StreamWorkstationEventsResponse_EVENT_TITLE) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[0]
}

func (x StreamWorkstationEventsResponse_EVENT_TITLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamWorkstationEventsResponse_EVENT_TITLE.Descriptor instead.
func (StreamWorkstationEventsResponse_EVENT_TITLE) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{1, 0}
}

type Report_REPORT_TYPE int32

const (
	Report_X                  Report_REPORT_TYPE = 0
	Report_POS_INFO           Report_REPORT_TYPE = 1
	Report_POS_ALFA_INFO      Report_REPORT_TYPE = 2
	Report_POS_FULL_INFO      Report_REPORT_TYPE = 3
	Report_POS_ALFA_FULL_INFO Report_REPORT_TYPE = 4
	Report_LAST_DOCUMENT      Report_REPORT_TYPE = 5
)

// Enum value maps for Report_REPORT_TYPE.
var (
	Report_REPORT_TYPE_name = map[int32]string{
		0: "X",
		1: "POS_INFO",
		2: "POS_ALFA_INFO",
		3: "POS_FULL_INFO",
		4: "POS_ALFA_FULL_INFO",
		5: "LAST_DOCUMENT",
	}
	Report_REPORT_TYPE_value = map[string]int32{
		"X":                  0,
		"POS_INFO":           1,
		"POS_ALFA_INFO":      2,
		"POS_FULL_INFO":      3,
		"POS_ALFA_FULL_INFO": 4,
		"LAST_DOCUMENT":      5,
	}
)

func (x Report_REPORT_TYPE) Enum() *Report_REPORT_TYPE {
	p := new(Report_REPORT_TYPE)
	*p = x
	return p
}

func (x Report_REPORT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Report_REPORT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[1].Descriptor()
}

func (Report_REPORT_TYPE) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[1]
}

func (x Report_REPORT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Report_REPORT_TYPE.Descriptor instead.
func (Report_REPORT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{7, 0}
}

type StreamWorkstationEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkstationId string `protobuf:"bytes,1,opt,name=workstation_id,json=workstationId,proto3" json:"workstation_id,omitempty"`
}

func (x *StreamWorkstationEventsRequest) Reset() {
	*x = StreamWorkstationEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWorkstationEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkstationEventsRequest) ProtoMessage() {}

func (x *StreamWorkstationEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkstationEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamWorkstationEventsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{0}
}

func (x *StreamWorkstationEventsRequest) GetWorkstationId() string {
	if x != nil {
		return x.WorkstationId
	}
	return ""
}

type StreamWorkstationEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTitle  StreamWorkstationEventsResponse_EVENT_TITLE `protobuf:"varint,1,opt,name=event_title,json=eventTitle,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse_EVENT_TITLE" json:"event_title,omitempty"`
	Purchase    *Purchase                                   `protobuf:"bytes,2,opt,name=purchase,proto3,oneof" json:"purchase,omitempty"`
	Refund      *Refund                                     `protobuf:"bytes,3,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	CloseShift  *CloseShift                                 `protobuf:"bytes,4,opt,name=close_shift,json=closeShift,proto3,oneof" json:"close_shift,omitempty"`
	Report      *Report                                     `protobuf:"bytes,5,opt,name=report,proto3,oneof" json:"report,omitempty"`
	CashIn      *CashIncome                                 `protobuf:"bytes,6,opt,name=cash_in,json=cashIn,proto3,oneof" json:"cash_in,omitempty"`
	CashOutcome *CashOutcome                                `protobuf:"bytes,7,opt,name=cash_outcome,json=cashOutcome,proto3,oneof" json:"cash_outcome,omitempty"`
}

func (x *StreamWorkstationEventsResponse) Reset() {
	*x = StreamWorkstationEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWorkstationEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkstationEventsResponse) ProtoMessage() {}

func (x *StreamWorkstationEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkstationEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamWorkstationEventsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{1}
}

func (x *StreamWorkstationEventsResponse) GetEventTitle() StreamWorkstationEventsResponse_EVENT_TITLE {
	if x != nil {
		return x.EventTitle
	}
	return StreamWorkstationEventsResponse_PURCHASE
}

func (x *StreamWorkstationEventsResponse) GetPurchase() *Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCloseShift() *CloseShift {
	if x != nil {
		return x.CloseShift
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCashIn() *CashIncome {
	if x != nil {
		return x.CashIn
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCashOutcome() *CashOutcome {
	if x != nil {
		return x.CashOutcome
	}
	return nil
}

type Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string                `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Order       string                `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Goods       []*PurchaseGood       `protobuf:"bytes,3,rep,name=goods,proto3" json:"goods,omitempty"`
	Payments    []*PurchasePayment    `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Tags        map[string]*anypb.Any `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Purchase) Reset() {
	*x = Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purchase) ProtoMessage() {}

func (x *Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purchase.ProtoReflect.Descriptor instead.
func (*Purchase) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{2}
}

func (x *Purchase) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Purchase) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Purchase) GetGoods() []*PurchaseGood {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Purchase) GetPayments() []*PurchasePayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Purchase) GetTags() map[string]*anypb.Any {
	if x != nil {
		return x.Tags
	}
	return nil
}

type PurchasePayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentType string  `protobuf:"bytes,1,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	Amount      float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Rrn         *string `protobuf:"bytes,3,opt,name=rrn,proto3,oneof" json:"rrn,omitempty"`
}

func (x *PurchasePayment) Reset() {
	*x = PurchasePayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasePayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasePayment) ProtoMessage() {}

func (x *PurchasePayment) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasePayment.ProtoReflect.Descriptor instead.
func (*PurchasePayment) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{3}
}

func (x *PurchasePayment) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *PurchasePayment) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PurchasePayment) GetRrn() string {
	if x != nil && x.Rrn != nil {
		return *x.Rrn
	}
	return ""
}

type PurchaseGood struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity   float64               `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price      float64               `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Department int32                 `protobuf:"varint,4,opt,name=department,proto3" json:"department,omitempty"`
	TaxType    string                `protobuf:"bytes,5,opt,name=tax_type,json=taxType,proto3" json:"tax_type,omitempty"`
	Tags       map[string]*anypb.Any `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PurchaseGood) Reset() {
	*x = PurchaseGood{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseGood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseGood) ProtoMessage() {}

func (x *PurchaseGood) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseGood.ProtoReflect.Descriptor instead.
func (*PurchaseGood) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{4}
}

func (x *PurchaseGood) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PurchaseGood) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PurchaseGood) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseGood) GetDepartment() int32 {
	if x != nil {
		return x.Department
	}
	return 0
}

func (x *PurchaseGood) GetTaxType() string {
	if x != nil {
		return x.TaxType
	}
	return ""
}

func (x *PurchaseGood) GetTags() map[string]*anypb.Any {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string                `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Order       string                `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Goods       []*PurchaseGood       `protobuf:"bytes,3,rep,name=goods,proto3" json:"goods,omitempty"`
	Payments    []*PurchasePayment    `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Tags        map[string]*anypb.Any `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{5}
}

func (x *Refund) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Refund) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Refund) GetGoods() []*PurchaseGood {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Refund) GetPayments() []*PurchasePayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Refund) GetTags() map[string]*anypb.Any {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CloseShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	DeviceType  *string `protobuf:"bytes,2,opt,name=device_type,json=deviceType,proto3,oneof" json:"device_type,omitempty"`
}

func (x *CloseShift) Reset() {
	*x = CloseShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShift) ProtoMessage() {}

func (x *CloseShift) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShift.ProtoReflect.Descriptor instead.
func (*CloseShift) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{6}
}

func (x *CloseShift) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CloseShift) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string               `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Types       []Report_REPORT_TYPE `protobuf:"varint,2,rep,packed,name=types,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.Report_REPORT_TYPE" json:"types,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{7}
}

func (x *Report) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Report) GetTypes() []Report_REPORT_TYPE {
	if x != nil {
		return x.Types
	}
	return nil
}

type CashIncome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Sum         float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *CashIncome) Reset() {
	*x = CashIncome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashIncome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashIncome) ProtoMessage() {}

func (x *CashIncome) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashIncome.ProtoReflect.Descriptor instead.
func (*CashIncome) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{8}
}

func (x *CashIncome) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CashIncome) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type CashOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Sum         float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *CashOutcome) Reset() {
	*x = CashOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashOutcome) ProtoMessage() {}

func (x *CashOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashOutcome.ProtoReflect.Descriptor instead.
func (*CashOutcome) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{9}
}

func (x *CashOutcome) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CashOutcome) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

var File_grpc_cashdesk_cashdesk_proto protoreflect.FileDescriptor

var file_grpc_cashdesk_cashdesk_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2f,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xf3, 0x06, 0x0a,
	0x1f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x76, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x55, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x52, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e,
	0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73,
	0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a,
	0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x48,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x0b,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x5f,
	0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x04,
	0x52, 0x06, 0x63, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x5d, 0x0a, 0x0c, 0x63,
	0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x73,
	0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0b, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55,
	0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x46, 0x55,
	0x4e, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x53, 0x48,
	0x49, 0x46, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x49, 0x4e, 0x10, 0x04, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4e, 0x54, 0x10, 0x06,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b,
	0x10, 0x07, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x69,
	0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x22, 0x89, 0x03, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74,
	0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65,
	0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52,
	0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a,
	0x4d, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b,
	0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03,
	0x72, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x72, 0x6e,
	0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x72, 0x72, 0x6e, 0x22, 0xb4, 0x02, 0x0a, 0x0c,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47,
	0x6f, 0x6f, 0x64, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x1a, 0x4d, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x85, 0x03, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x47, 0x6f, 0x6f, 0x64, 0x52, 0x05, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x12, 0x55, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e,
	0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73,
	0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4e, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67,
	0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x2e, 0x54, 0x61, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0x4d, 0x0a, 0x09, 0x54,
	0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x65, 0x0a, 0x0a, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xf4, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x52, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x3c,
	0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x05, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x22, 0x73, 0x0a, 0x0b, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x05, 0x0a, 0x01, 0x58, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x5f, 0x41,
	0x4c, 0x46, 0x41, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f,
	0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x16, 0x0a,
	0x12, 0x50, 0x4f, 0x53, 0x5f, 0x41, 0x4c, 0x46, 0x41, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x22, 0x41, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x68,
	0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x0b, 0x43,
	0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61,
	0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x32,
	0xbf, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x12, 0xb2, 0x01, 0x0a,
	0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x66, 0x64, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65,
	0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_cashdesk_cashdesk_proto_rawDescOnce sync.Once
	file_grpc_cashdesk_cashdesk_proto_rawDescData = file_grpc_cashdesk_cashdesk_proto_rawDesc
)

func file_grpc_cashdesk_cashdesk_proto_rawDescGZIP() []byte {
	file_grpc_cashdesk_cashdesk_proto_rawDescOnce.Do(func() {
		file_grpc_cashdesk_cashdesk_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_cashdesk_cashdesk_proto_rawDescData)
	})
	return file_grpc_cashdesk_cashdesk_proto_rawDescData
}

var file_grpc_cashdesk_cashdesk_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_grpc_cashdesk_cashdesk_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_grpc_cashdesk_cashdesk_proto_goTypes = []interface{}{
	(StreamWorkstationEventsResponse_EVENT_TITLE)(0), // 0: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.EVENT_TITLE
	(Report_REPORT_TYPE)(0),                          // 1: net.vseinstrumenti.git.fd.proto.cashdesk.Report.REPORT_TYPE
	(*StreamWorkstationEventsRequest)(nil),           // 2: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsRequest
	(*StreamWorkstationEventsResponse)(nil),          // 3: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse
	(*Purchase)(nil),                                 // 4: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase
	(*PurchasePayment)(nil),                          // 5: net.vseinstrumenti.git.fd.proto.cashdesk.PurchasePayment
	(*PurchaseGood)(nil),                             // 6: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood
	(*Refund)(nil),                                   // 7: net.vseinstrumenti.git.fd.proto.cashdesk.Refund
	(*CloseShift)(nil),                               // 8: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift
	(*Report)(nil),                                   // 9: net.vseinstrumenti.git.fd.proto.cashdesk.Report
	(*CashIncome)(nil),                               // 10: net.vseinstrumenti.git.fd.proto.cashdesk.CashIncome
	(*CashOutcome)(nil),                              // 11: net.vseinstrumenti.git.fd.proto.cashdesk.CashOutcome
	nil,                                              // 12: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.TagsEntry
	nil,                                              // 13: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood.TagsEntry
	nil,                                              // 14: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.TagsEntry
	(*anypb.Any)(nil),                                // 15: google.protobuf.Any
}
var file_grpc_cashdesk_cashdesk_proto_depIdxs = []int32{
	0,  // 0: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.event_title:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.EVENT_TITLE
	4,  // 1: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.purchase:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Purchase
	7,  // 2: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.refund:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Refund
	8,  // 3: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.close_shift:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift
	9,  // 4: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.report:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Report
	10, // 5: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.cash_in:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CashIncome
	11, // 6: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.cash_outcome:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CashOutcome
	6,  // 7: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.goods:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood
	5,  // 8: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.payments:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchasePayment
	12, // 9: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.tags:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.TagsEntry
	13, // 10: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood.tags:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood.TagsEntry
	6,  // 11: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.goods:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood
	5,  // 12: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.payments:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchasePayment
	14, // 13: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.tags:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Refund.TagsEntry
	1,  // 14: net.vseinstrumenti.git.fd.proto.cashdesk.Report.types:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Report.REPORT_TYPE
	15, // 15: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.TagsEntry.value:type_name -> google.protobuf.Any
	15, // 16: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseGood.TagsEntry.value:type_name -> google.protobuf.Any
	15, // 17: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.TagsEntry.value:type_name -> google.protobuf.Any
	2,  // 18: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.StreamWorkstationEvents:input_type -> net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsRequest
	3,  // 19: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.StreamWorkstationEvents:output_type -> net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_grpc_cashdesk_cashdesk_proto_init() }
func file_grpc_cashdesk_cashdesk_proto_init() {
	if File_grpc_cashdesk_cashdesk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_cashdesk_cashdesk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWorkstationEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWorkstationEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasePayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseGood); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashIncome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_cashdesk_cashdesk_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_cashdesk_cashdesk_proto_goTypes,
		DependencyIndexes: file_grpc_cashdesk_cashdesk_proto_depIdxs,
		EnumInfos:         file_grpc_cashdesk_cashdesk_proto_enumTypes,
		MessageInfos:      file_grpc_cashdesk_cashdesk_proto_msgTypes,
	}.Build()
	File_grpc_cashdesk_cashdesk_proto = out.File
	file_grpc_cashdesk_cashdesk_proto_rawDesc = nil
	file_grpc_cashdesk_cashdesk_proto_goTypes = nil
	file_grpc_cashdesk_cashdesk_proto_depIdxs = nil
}
