// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.22.3
// source: grpc/cashdesk/cashdesk.proto

package cashdeskpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OPERATION_TYPE int32

const (
	OPERATION_TYPE_PURCHASE       OPERATION_TYPE = 0
	OPERATION_TYPE_REFUND         OPERATION_TYPE = 1
	OPERATION_TYPE_CLOSE_SHIFT    OPERATION_TYPE = 2
	OPERATION_TYPE_REPORT         OPERATION_TYPE = 3
	OPERATION_TYPE_CASH_IN        OPERATION_TYPE = 4
	OPERATION_TYPE_CASH_OUT       OPERATION_TYPE = 5
	OPERATION_TYPE_CONTINUE_PRINT OPERATION_TYPE = 6
	OPERATION_TYPE_CANCEL_CHECK   OPERATION_TYPE = 7
)

// Enum value maps for OPERATION_TYPE.
var (
	OPERATION_TYPE_name = map[int32]string{
		0: "PURCHASE",
		1: "REFUND",
		2: "CLOSE_SHIFT",
		3: "REPORT",
		4: "CASH_IN",
		5: "CASH_OUT",
		6: "CONTINUE_PRINT",
		7: "CANCEL_CHECK",
	}
	OPERATION_TYPE_value = map[string]int32{
		"PURCHASE":       0,
		"REFUND":         1,
		"CLOSE_SHIFT":    2,
		"REPORT":         3,
		"CASH_IN":        4,
		"CASH_OUT":       5,
		"CONTINUE_PRINT": 6,
		"CANCEL_CHECK":   7,
	}
)

func (x OPERATION_TYPE) Enum() *OPERATION_TYPE {
	p := new(OPERATION_TYPE)
	*p = x
	return p
}

func (x OPERATION_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OPERATION_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[0].Descriptor()
}

func (OPERATION_TYPE) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[0]
}

func (x OPERATION_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OPERATION_TYPE.Descriptor instead.
func (OPERATION_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{0}
}

type CloseShift_DEVICE_TYPE int32

const (
	CloseShift_POS      CloseShift_DEVICE_TYPE = 0
	CloseShift_POS_ALFA CloseShift_DEVICE_TYPE = 1
	CloseShift_CASHDESK CloseShift_DEVICE_TYPE = 2
)

// Enum value maps for CloseShift_DEVICE_TYPE.
var (
	CloseShift_DEVICE_TYPE_name = map[int32]string{
		0: "POS",
		1: "POS_ALFA",
		2: "CASHDESK",
	}
	CloseShift_DEVICE_TYPE_value = map[string]int32{
		"POS":      0,
		"POS_ALFA": 1,
		"CASHDESK": 2,
	}
)

func (x CloseShift_DEVICE_TYPE) Enum() *CloseShift_DEVICE_TYPE {
	p := new(CloseShift_DEVICE_TYPE)
	*p = x
	return p
}

func (x CloseShift_DEVICE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseShift_DEVICE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[1].Descriptor()
}

func (CloseShift_DEVICE_TYPE) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[1]
}

func (x CloseShift_DEVICE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloseShift_DEVICE_TYPE.Descriptor instead.
func (CloseShift_DEVICE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{6, 0}
}

type Report_REPORT_TYPE int32

const (
	Report_X_REPORT           Report_REPORT_TYPE = 0
	Report_POS_INFO           Report_REPORT_TYPE = 1
	Report_POS_ALFA_INFO      Report_REPORT_TYPE = 2
	Report_POS_FULL_INFO      Report_REPORT_TYPE = 3
	Report_POS_ALFA_FULL_INFO Report_REPORT_TYPE = 4
	Report_LAST_DOCUMENT      Report_REPORT_TYPE = 5
)

// Enum value maps for Report_REPORT_TYPE.
var (
	Report_REPORT_TYPE_name = map[int32]string{
		0: "X_REPORT",
		1: "POS_INFO",
		2: "POS_ALFA_INFO",
		3: "POS_FULL_INFO",
		4: "POS_ALFA_FULL_INFO",
		5: "LAST_DOCUMENT",
	}
	Report_REPORT_TYPE_value = map[string]int32{
		"X_REPORT":           0,
		"POS_INFO":           1,
		"POS_ALFA_INFO":      2,
		"POS_FULL_INFO":      3,
		"POS_ALFA_FULL_INFO": 4,
		"LAST_DOCUMENT":      5,
	}
)

func (x Report_REPORT_TYPE) Enum() *Report_REPORT_TYPE {
	p := new(Report_REPORT_TYPE)
	*p = x
	return p
}

func (x Report_REPORT_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Report_REPORT_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[2].Descriptor()
}

func (Report_REPORT_TYPE) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[2]
}

func (x Report_REPORT_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Report_REPORT_TYPE.Descriptor instead.
func (Report_REPORT_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{7, 0}
}

type SendEventResultRequest_STATUS int32

const (
	SendEventResultRequest_SUCCEEDED SendEventResultRequest_STATUS = 0
	SendEventResultRequest_FAILED    SendEventResultRequest_STATUS = 1
)

// Enum value maps for SendEventResultRequest_STATUS.
var (
	SendEventResultRequest_STATUS_name = map[int32]string{
		0: "SUCCEEDED",
		1: "FAILED",
	}
	SendEventResultRequest_STATUS_value = map[string]int32{
		"SUCCEEDED": 0,
		"FAILED":    1,
	}
)

func (x SendEventResultRequest_STATUS) Enum() *SendEventResultRequest_STATUS {
	p := new(SendEventResultRequest_STATUS)
	*p = x
	return p
}

func (x SendEventResultRequest_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendEventResultRequest_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_cashdesk_cashdesk_proto_enumTypes[3].Descriptor()
}

func (SendEventResultRequest_STATUS) Type() protoreflect.EnumType {
	return &file_grpc_cashdesk_cashdesk_proto_enumTypes[3]
}

func (x SendEventResultRequest_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendEventResultRequest_STATUS.Descriptor instead.
func (SendEventResultRequest_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{10, 0}
}

type StreamWorkstationEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkstationId string `protobuf:"bytes,1,opt,name=workstation_id,json=workstationId,proto3" json:"workstation_id,omitempty"`
}

func (x *StreamWorkstationEventsRequest) Reset() {
	*x = StreamWorkstationEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWorkstationEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkstationEventsRequest) ProtoMessage() {}

func (x *StreamWorkstationEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkstationEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamWorkstationEventsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{0}
}

func (x *StreamWorkstationEventsRequest) GetWorkstationId() string {
	if x != nil {
		return x.WorkstationId
	}
	return ""
}

type StreamWorkstationEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType OPERATION_TYPE `protobuf:"varint,1,opt,name=operation_type,json=operationType,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.OPERATION_TYPE" json:"operation_type,omitempty"`
	Guid          string         `protobuf:"bytes,2,opt,name=guid,proto3" json:"guid,omitempty"`
	Purchase      *Purchase      `protobuf:"bytes,3,opt,name=purchase,proto3,oneof" json:"purchase,omitempty"`
	Refund        *Refund        `protobuf:"bytes,4,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	CloseShift    *CloseShift    `protobuf:"bytes,5,opt,name=close_shift,json=closeShift,proto3,oneof" json:"close_shift,omitempty"`
	Report        *Report        `protobuf:"bytes,6,opt,name=report,proto3,oneof" json:"report,omitempty"`
	CashIncome    *CashIncome    `protobuf:"bytes,7,opt,name=cash_income,json=cashIncome,proto3,oneof" json:"cash_income,omitempty"`
	CashOutcome   *CashOutcome   `protobuf:"bytes,8,opt,name=cash_outcome,json=cashOutcome,proto3,oneof" json:"cash_outcome,omitempty"`
}

func (x *StreamWorkstationEventsResponse) Reset() {
	*x = StreamWorkstationEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamWorkstationEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamWorkstationEventsResponse) ProtoMessage() {}

func (x *StreamWorkstationEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamWorkstationEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamWorkstationEventsResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{1}
}

func (x *StreamWorkstationEventsResponse) GetOperationType() OPERATION_TYPE {
	if x != nil {
		return x.OperationType
	}
	return OPERATION_TYPE_PURCHASE
}

func (x *StreamWorkstationEventsResponse) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *StreamWorkstationEventsResponse) GetPurchase() *Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetRefund() *Refund {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCloseShift() *CloseShift {
	if x != nil {
		return x.CloseShift
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCashIncome() *CashIncome {
	if x != nil {
		return x.CashIncome
	}
	return nil
}

func (x *StreamWorkstationEventsResponse) GetCashOutcome() *CashOutcome {
	if x != nil {
		return x.CashOutcome
	}
	return nil
}

type Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string           `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Order       string           `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Goods       []*Product       `protobuf:"bytes,3,rep,name=goods,proto3" json:"goods,omitempty"`
	Payments    []*Payment       `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Tags        *structpb.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Purchase) Reset() {
	*x = Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purchase) ProtoMessage() {}

func (x *Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purchase.ProtoReflect.Descriptor instead.
func (*Purchase) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{2}
}

func (x *Purchase) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Purchase) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Purchase) GetGoods() []*Product {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Purchase) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Purchase) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentType string  `protobuf:"bytes,1,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	Amount      float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Rrn         *string `protobuf:"bytes,3,opt,name=rrn,proto3,oneof" json:"rrn,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{3}
}

func (x *Payment) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Payment) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetRrn() string {
	if x != nil && x.Rrn != nil {
		return *x.Rrn
	}
	return ""
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Quantity   float64          `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price      float64          `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Department int32            `protobuf:"varint,4,opt,name=department,proto3" json:"department,omitempty"`
	TaxType    string           `protobuf:"bytes,5,opt,name=tax_type,json=taxType,proto3" json:"tax_type,omitempty"`
	Tags       *structpb.Struct `protobuf:"bytes,6,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{4}
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetDepartment() int32 {
	if x != nil {
		return x.Department
	}
	return 0
}

func (x *Product) GetTaxType() string {
	if x != nil {
		return x.TaxType
	}
	return ""
}

func (x *Product) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Refund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string           `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Order       string           `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
	Goods       []*Product       `protobuf:"bytes,3,rep,name=goods,proto3" json:"goods,omitempty"`
	Payments    []*Payment       `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	Tags        *structpb.Struct `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Refund) Reset() {
	*x = Refund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Refund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Refund) ProtoMessage() {}

func (x *Refund) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Refund.ProtoReflect.Descriptor instead.
func (*Refund) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{5}
}

func (x *Refund) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Refund) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *Refund) GetGoods() []*Product {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *Refund) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Refund) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CloseShift struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string                  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	DeviceType  *CloseShift_DEVICE_TYPE `protobuf:"varint,2,opt,name=device_type,json=deviceType,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift_DEVICE_TYPE,oneof" json:"device_type,omitempty"`
}

func (x *CloseShift) Reset() {
	*x = CloseShift{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShift) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShift) ProtoMessage() {}

func (x *CloseShift) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShift.ProtoReflect.Descriptor instead.
func (*CloseShift) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{6}
}

func (x *CloseShift) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CloseShift) GetDeviceType() CloseShift_DEVICE_TYPE {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return CloseShift_POS
}

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string               `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Types       []Report_REPORT_TYPE `protobuf:"varint,2,rep,packed,name=types,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.Report_REPORT_TYPE" json:"types,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{7}
}

func (x *Report) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *Report) GetTypes() []Report_REPORT_TYPE {
	if x != nil {
		return x.Types
	}
	return nil
}

type CashIncome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Sum         float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *CashIncome) Reset() {
	*x = CashIncome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashIncome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashIncome) ProtoMessage() {}

func (x *CashIncome) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashIncome.ProtoReflect.Descriptor instead.
func (*CashIncome) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{8}
}

func (x *CashIncome) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CashIncome) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type CashOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CashierName string  `protobuf:"bytes,1,opt,name=cashier_name,json=cashierName,proto3" json:"cashier_name,omitempty"`
	Sum         float64 `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *CashOutcome) Reset() {
	*x = CashOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CashOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashOutcome) ProtoMessage() {}

func (x *CashOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashOutcome.ProtoReflect.Descriptor instead.
func (*CashOutcome) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{9}
}

func (x *CashOutcome) GetCashierName() string {
	if x != nil {
		return x.CashierName
	}
	return ""
}

func (x *CashOutcome) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

type SendEventResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid   string                        `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Status SendEventResultRequest_STATUS `protobuf:"varint,2,opt,name=status,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest_STATUS" json:"status,omitempty"`
	Result *SendEventResultRequestResult `protobuf:"bytes,3,opt,name=result,proto3,oneof" json:"result,omitempty"`
	Error  *SendEventResultRequestError  `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *SendEventResultRequest) Reset() {
	*x = SendEventResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResultRequest) ProtoMessage() {}

func (x *SendEventResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResultRequest.ProtoReflect.Descriptor instead.
func (*SendEventResultRequest) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{10}
}

func (x *SendEventResultRequest) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *SendEventResultRequest) GetStatus() SendEventResultRequest_STATUS {
	if x != nil {
		return x.Status
	}
	return SendEventResultRequest_SUCCEEDED
}

func (x *SendEventResultRequest) GetResult() *SendEventResultRequestResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SendEventResultRequest) GetError() *SendEventResultRequestError {
	if x != nil {
		return x.Error
	}
	return nil
}

type SendEventResultRequestError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *SendEventResultRequestError) Reset() {
	*x = SendEventResultRequestError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResultRequestError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResultRequestError) ProtoMessage() {}

func (x *SendEventResultRequestError) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResultRequestError.ProtoReflect.Descriptor instead.
func (*SendEventResultRequestError) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{11}
}

func (x *SendEventResultRequestError) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type SendEventResultRequestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationType OPERATION_TYPE    `protobuf:"varint,1,opt,name=operation_type,json=operationType,proto3,enum=net.vseinstrumenti.git.fd.proto.cashdesk.OPERATION_TYPE" json:"operation_type,omitempty"`
	Purchase      *PurchaseResult   `protobuf:"bytes,3,opt,name=purchase,proto3,oneof" json:"purchase,omitempty"`
	Refund        *RefundResult     `protobuf:"bytes,4,opt,name=refund,proto3,oneof" json:"refund,omitempty"`
	CloseShift    *CloseShiftResult `protobuf:"bytes,5,opt,name=close_shift,json=closeShift,proto3,oneof" json:"close_shift,omitempty"`
}

func (x *SendEventResultRequestResult) Reset() {
	*x = SendEventResultRequestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResultRequestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResultRequestResult) ProtoMessage() {}

func (x *SendEventResultRequestResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResultRequestResult.ProtoReflect.Descriptor instead.
func (*SendEventResultRequestResult) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{12}
}

func (x *SendEventResultRequestResult) GetOperationType() OPERATION_TYPE {
	if x != nil {
		return x.OperationType
	}
	return OPERATION_TYPE_PURCHASE
}

func (x *SendEventResultRequestResult) GetPurchase() *PurchaseResult {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *SendEventResultRequestResult) GetRefund() *RefundResult {
	if x != nil {
		return x.Refund
	}
	return nil
}

func (x *SendEventResultRequestResult) GetCloseShift() *CloseShiftResult {
	if x != nil {
		return x.CloseShift
	}
	return nil
}

type PurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment              *PaymentInfo     `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Checks               *ReceiptInfo     `protobuf:"bytes,2,opt,name=checks,proto3" json:"checks,omitempty"`
	FiscalDocumentNumber uint64           `protobuf:"varint,3,opt,name=fiscal_document_number,json=fiscalDocumentNumber,proto3" json:"fiscal_document_number,omitempty"`
	FiscalSerialNumber   string           `protobuf:"bytes,4,opt,name=fiscal_serial_number,json=fiscalSerialNumber,proto3" json:"fiscal_serial_number,omitempty"`
	FiscalSign           string           `protobuf:"bytes,5,opt,name=fiscal_sign,json=fiscalSign,proto3" json:"fiscal_sign,omitempty"`
	IsClosed             bool             `protobuf:"varint,6,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	IsPrinted            bool             `protobuf:"varint,7,opt,name=is_printed,json=isPrinted,proto3" json:"is_printed,omitempty"`
	ZInfo                *structpb.Struct `protobuf:"bytes,8,opt,name=z_info,json=zInfo,proto3" json:"z_info,omitempty"`
	Mark                 *structpb.Struct `protobuf:"bytes,9,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *PurchaseResult) Reset() {
	*x = PurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResult) ProtoMessage() {}

func (x *PurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResult.ProtoReflect.Descriptor instead.
func (*PurchaseResult) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{13}
}

func (x *PurchaseResult) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *PurchaseResult) GetChecks() *ReceiptInfo {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *PurchaseResult) GetFiscalDocumentNumber() uint64 {
	if x != nil {
		return x.FiscalDocumentNumber
	}
	return 0
}

func (x *PurchaseResult) GetFiscalSerialNumber() string {
	if x != nil {
		return x.FiscalSerialNumber
	}
	return ""
}

func (x *PurchaseResult) GetFiscalSign() string {
	if x != nil {
		return x.FiscalSign
	}
	return ""
}

func (x *PurchaseResult) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *PurchaseResult) GetIsPrinted() bool {
	if x != nil {
		return x.IsPrinted
	}
	return false
}

func (x *PurchaseResult) GetZInfo() *structpb.Struct {
	if x != nil {
		return x.ZInfo
	}
	return nil
}

func (x *PurchaseResult) GetMark() *structpb.Struct {
	if x != nil {
		return x.Mark
	}
	return nil
}

type RefundResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment              *PaymentInfo     `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Checks               *ReceiptInfo     `protobuf:"bytes,2,opt,name=checks,proto3" json:"checks,omitempty"`
	FiscalDocumentNumber uint64           `protobuf:"varint,3,opt,name=fiscal_document_number,json=fiscalDocumentNumber,proto3" json:"fiscal_document_number,omitempty"`
	FiscalSerialNumber   string           `protobuf:"bytes,4,opt,name=fiscal_serial_number,json=fiscalSerialNumber,proto3" json:"fiscal_serial_number,omitempty"`
	FiscalSign           string           `protobuf:"bytes,5,opt,name=fiscal_sign,json=fiscalSign,proto3" json:"fiscal_sign,omitempty"`
	IsClosed             bool             `protobuf:"varint,6,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	IsPrinted            bool             `protobuf:"varint,7,opt,name=is_printed,json=isPrinted,proto3" json:"is_printed,omitempty"`
	ZInfo                *structpb.Struct `protobuf:"bytes,8,opt,name=z_info,json=zInfo,proto3" json:"z_info,omitempty"`
	Mark                 *structpb.Struct `protobuf:"bytes,9,opt,name=mark,proto3" json:"mark,omitempty"`
}

func (x *RefundResult) Reset() {
	*x = RefundResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundResult) ProtoMessage() {}

func (x *RefundResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundResult.ProtoReflect.Descriptor instead.
func (*RefundResult) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{14}
}

func (x *RefundResult) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *RefundResult) GetChecks() *ReceiptInfo {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *RefundResult) GetFiscalDocumentNumber() uint64 {
	if x != nil {
		return x.FiscalDocumentNumber
	}
	return 0
}

func (x *RefundResult) GetFiscalSerialNumber() string {
	if x != nil {
		return x.FiscalSerialNumber
	}
	return ""
}

func (x *RefundResult) GetFiscalSign() string {
	if x != nil {
		return x.FiscalSign
	}
	return ""
}

func (x *RefundResult) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *RefundResult) GetIsPrinted() bool {
	if x != nil {
		return x.IsPrinted
	}
	return false
}

func (x *RefundResult) GetZInfo() *structpb.Struct {
	if x != nil {
		return x.ZInfo
	}
	return nil
}

func (x *RefundResult) GetMark() *structpb.Struct {
	if x != nil {
		return x.Mark
	}
	return nil
}

type CloseShiftResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FullCheckS           string           `protobuf:"bytes,1,opt,name=full_check_s,json=fullCheckS,proto3" json:"full_check_s,omitempty"`
	FullCheckA           string           `protobuf:"bytes,2,opt,name=full_check_a,json=fullCheckA,proto3" json:"full_check_a,omitempty"`
	FiscalDocumentNumber uint64           `protobuf:"varint,3,opt,name=fiscal_document_number,json=fiscalDocumentNumber,proto3" json:"fiscal_document_number,omitempty"`
	FiscalSerialNumber   string           `protobuf:"bytes,4,opt,name=fiscal_serial_number,json=fiscalSerialNumber,proto3" json:"fiscal_serial_number,omitempty"`
	FiscalSign           string           `protobuf:"bytes,5,opt,name=fiscal_sign,json=fiscalSign,proto3" json:"fiscal_sign,omitempty"`
	IsClosed             bool             `protobuf:"varint,6,opt,name=is_closed,json=isClosed,proto3" json:"is_closed,omitempty"`
	IsPrinted            bool             `protobuf:"varint,7,opt,name=is_printed,json=isPrinted,proto3" json:"is_printed,omitempty"`
	ZInfo                *structpb.Struct `protobuf:"bytes,8,opt,name=z_info,json=zInfo,proto3" json:"z_info,omitempty"`
}

func (x *CloseShiftResult) Reset() {
	*x = CloseShiftResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseShiftResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseShiftResult) ProtoMessage() {}

func (x *CloseShiftResult) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseShiftResult.ProtoReflect.Descriptor instead.
func (*CloseShiftResult) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{15}
}

func (x *CloseShiftResult) GetFullCheckS() string {
	if x != nil {
		return x.FullCheckS
	}
	return ""
}

func (x *CloseShiftResult) GetFullCheckA() string {
	if x != nil {
		return x.FullCheckA
	}
	return ""
}

func (x *CloseShiftResult) GetFiscalDocumentNumber() uint64 {
	if x != nil {
		return x.FiscalDocumentNumber
	}
	return 0
}

func (x *CloseShiftResult) GetFiscalSerialNumber() string {
	if x != nil {
		return x.FiscalSerialNumber
	}
	return ""
}

func (x *CloseShiftResult) GetFiscalSign() string {
	if x != nil {
		return x.FiscalSign
	}
	return ""
}

func (x *CloseShiftResult) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

func (x *CloseShiftResult) GetIsPrinted() bool {
	if x != nil {
		return x.IsPrinted
	}
	return false
}

func (x *CloseShiftResult) GetZInfo() *structpb.Struct {
	if x != nil {
		return x.ZInfo
	}
	return nil
}

type ParsedCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  *SlipCheck `protobuf:"bytes,1,opt,name=first,proto3" json:"first,omitempty"`
	Second *SlipCheck `protobuf:"bytes,2,opt,name=second,proto3,oneof" json:"second,omitempty"`
}

func (x *ParsedCheck) Reset() {
	*x = ParsedCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsedCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsedCheck) ProtoMessage() {}

func (x *ParsedCheck) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsedCheck.ProtoReflect.Descriptor instead.
func (*ParsedCheck) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{16}
}

func (x *ParsedCheck) GetFirst() *SlipCheck {
	if x != nil {
		return x.First
	}
	return nil
}

func (x *ParsedCheck) GetSecond() *SlipCheck {
	if x != nil {
		return x.Second
	}
	return nil
}

type ReceiptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParsedCheck *ParsedCheck `protobuf:"bytes,1,opt,name=parsed_check,json=parsedCheck,proto3,oneof" json:"parsed_check,omitempty"`
	FullCheck   *string      `protobuf:"bytes,2,opt,name=full_check,json=fullCheck,proto3,oneof" json:"full_check,omitempty"`
}

func (x *ReceiptInfo) Reset() {
	*x = ReceiptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptInfo) ProtoMessage() {}

func (x *ReceiptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptInfo.ProtoReflect.Descriptor instead.
func (*ReceiptInfo) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{17}
}

func (x *ReceiptInfo) GetParsedCheck() *ParsedCheck {
	if x != nil {
		return x.ParsedCheck
	}
	return nil
}

func (x *ReceiptInfo) GetFullCheck() string {
	if x != nil && x.FullCheck != nil {
		return *x.FullCheck
	}
	return ""
}

type PaymentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Rrn    *string `protobuf:"bytes,2,opt,name=rrn,proto3,oneof" json:"rrn,omitempty"`
}

func (x *PaymentInfo) Reset() {
	*x = PaymentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInfo) ProtoMessage() {}

func (x *PaymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInfo.ProtoReflect.Descriptor instead.
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentInfo) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentInfo) GetRrn() string {
	if x != nil && x.Rrn != nil {
		return *x.Rrn
	}
	return ""
}

type SlipCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstPart  string `protobuf:"bytes,1,opt,name=first_part,json=firstPart,proto3" json:"first_part,omitempty"`
	SecondPart string `protobuf:"bytes,2,opt,name=second_part,json=secondPart,proto3" json:"second_part,omitempty"`
	Sum        string `protobuf:"bytes,3,opt,name=sum,proto3" json:"sum,omitempty"`
}

func (x *SlipCheck) Reset() {
	*x = SlipCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlipCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlipCheck) ProtoMessage() {}

func (x *SlipCheck) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlipCheck.ProtoReflect.Descriptor instead.
func (*SlipCheck) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{19}
}

func (x *SlipCheck) GetFirstPart() string {
	if x != nil {
		return x.FirstPart
	}
	return ""
}

func (x *SlipCheck) GetSecondPart() string {
	if x != nil {
		return x.SecondPart
	}
	return ""
}

func (x *SlipCheck) GetSum() string {
	if x != nil {
		return x.Sum
	}
	return ""
}

type SendEventResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendEventResultResponse) Reset() {
	*x = SendEventResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendEventResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResultResponse) ProtoMessage() {}

func (x *SendEventResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_cashdesk_cashdesk_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResultResponse.ProtoReflect.Descriptor instead.
func (*SendEventResultResponse) Descriptor() ([]byte, []int) {
	return file_grpc_cashdesk_cashdesk_proto_rawDescGZIP(), []int{20}
}

var File_grpc_cashdesk_cashdesk_proto protoreflect.FileDescriptor

var file_grpc_cashdesk_cashdesk_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2f,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a, 0x1e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0xf4, 0x05, 0x0a, 0x1f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x53, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6e, 0x65, 0x74,
	0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e,
	0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73,
	0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a,
	0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x48,
	0x01, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x0b,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76,
	0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69,
	0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64,
	0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x5f,
	0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e,
	0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x65, 0x48, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x5d, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67,
	0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x48, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x5f, 0x6f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x22, 0x88, 0x02, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74,
	0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65,
	0x73, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x22, 0x63, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x72, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x72, 0x72, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x78, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x86, 0x02, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x4d, 0x0a,
	0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68,
	0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x66, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x40, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x2e, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x22, 0x32, 0x0a, 0x0b, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x4f, 0x53, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50,
	0x4f, 0x53, 0x5f, 0x41, 0x4c, 0x46, 0x41, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x53,
	0x48, 0x44, 0x45, 0x53, 0x4b, 0x10, 0x02, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0b, 0x52, 0x45, 0x50,
	0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x58, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x5f, 0x41, 0x4c, 0x46, 0x41,
	0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x4f, 0x53, 0x5f, 0x46,
	0x55, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f,
	0x53, 0x5f, 0x41, 0x4c, 0x46, 0x41, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x10, 0x05, 0x22, 0x41, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x68, 0x49, 0x6e, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x42, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x68,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x73, 0x68, 0x69,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x75, 0x6d, 0x22, 0x8e, 0x03, 0x0a,
	0x16, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x5f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x63, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x6e,
	0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x60, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x01, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x22, 0x23, 0x0a, 0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x31, 0x0a,
	0x1b, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x22, 0xb9, 0x03, 0x0a, 0x1c, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x5f, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x6e, 0x65, 0x74, 0x2e,
	0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67,
	0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68,
	0x64, 0x65, 0x73, 0x6b, 0x2e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x59, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a,
	0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x01, 0x52, 0x06, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x60, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73,
	0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74,
	0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65,
	0x73, 0x6b, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x66, 0x74, 0x22, 0xd2, 0x03, 0x0a,
	0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x4f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x4d, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x12,
	0x34, 0x0a, 0x16, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x73, 0x63, 0x61,
	0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69,
	0x73, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x7a, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x7a,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xd0, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x73, 0x63,
	0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x73, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x7a, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x05, 0x7a, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xcb, 0x02, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x12, 0x20, 0x0a, 0x0c, 0x66,
	0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x12, 0x34, 0x0a,
	0x16, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x66,
	0x69, 0x73, 0x63, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x73, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x73, 0x63,
	0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x7a, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x05, 0x7a, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0xb5, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x64, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x12, 0x49, 0x0a, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x6c, 0x69,
	0x70, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x66, 0x69, 0x72, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x6c, 0x69, 0x70, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x09, 0x66, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x61, 0x72, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x44, 0x0a,
	0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x03, 0x72, 0x72, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x03, 0x72, 0x72, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f,
	0x72, 0x72, 0x6e, 0x22, 0x5d, 0x0a, 0x09, 0x53, 0x6c, 0x69, 0x70, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x88, 0x01,
	0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x41, 0x53, 0x48, 0x5f,
	0x49, 0x4e, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x53, 0x48, 0x5f, 0x4f, 0x55, 0x54,
	0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x45, 0x5f, 0x50,
	0x52, 0x49, 0x4e, 0x54, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x5f, 0x43, 0x48, 0x45, 0x43, 0x4b, 0x10, 0x07, 0x32, 0xda, 0x02, 0x0a, 0x08, 0x43, 0x61, 0x73,
	0x68, 0x64, 0x65, 0x73, 0x6b, 0x12, 0xb2, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x48, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x98, 0x01, 0x0a, 0x0f, 0x53,
	0x65, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40,
	0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x41, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x76, 0x73, 0x65, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x67, 0x69, 0x74, 0x2e, 0x66, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x2e, 0x76, 0x73, 0x65,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x2e, 0x6e, 0x65, 0x74, 0x2f,
	0x66, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x61,
	0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65,
	0x73, 0x6b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_grpc_cashdesk_cashdesk_proto_rawDescOnce sync.Once
	file_grpc_cashdesk_cashdesk_proto_rawDescData = file_grpc_cashdesk_cashdesk_proto_rawDesc
)

func file_grpc_cashdesk_cashdesk_proto_rawDescGZIP() []byte {
	file_grpc_cashdesk_cashdesk_proto_rawDescOnce.Do(func() {
		file_grpc_cashdesk_cashdesk_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_cashdesk_cashdesk_proto_rawDescData)
	})
	return file_grpc_cashdesk_cashdesk_proto_rawDescData
}

var file_grpc_cashdesk_cashdesk_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_grpc_cashdesk_cashdesk_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_grpc_cashdesk_cashdesk_proto_goTypes = []interface{}{
	(OPERATION_TYPE)(0),                     // 0: net.vseinstrumenti.git.fd.proto.cashdesk.OPERATION_TYPE
	(CloseShift_DEVICE_TYPE)(0),             // 1: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift.DEVICE_TYPE
	(Report_REPORT_TYPE)(0),                 // 2: net.vseinstrumenti.git.fd.proto.cashdesk.Report.REPORT_TYPE
	(SendEventResultRequest_STATUS)(0),      // 3: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest.STATUS
	(*StreamWorkstationEventsRequest)(nil),  // 4: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsRequest
	(*StreamWorkstationEventsResponse)(nil), // 5: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse
	(*Purchase)(nil),                        // 6: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase
	(*Payment)(nil),                         // 7: net.vseinstrumenti.git.fd.proto.cashdesk.Payment
	(*Product)(nil),                         // 8: net.vseinstrumenti.git.fd.proto.cashdesk.Product
	(*Refund)(nil),                          // 9: net.vseinstrumenti.git.fd.proto.cashdesk.Refund
	(*CloseShift)(nil),                      // 10: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift
	(*Report)(nil),                          // 11: net.vseinstrumenti.git.fd.proto.cashdesk.Report
	(*CashIncome)(nil),                      // 12: net.vseinstrumenti.git.fd.proto.cashdesk.CashIncome
	(*CashOutcome)(nil),                     // 13: net.vseinstrumenti.git.fd.proto.cashdesk.CashOutcome
	(*SendEventResultRequest)(nil),          // 14: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest
	(*SendEventResultRequestError)(nil),     // 15: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestError
	(*SendEventResultRequestResult)(nil),    // 16: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult
	(*PurchaseResult)(nil),                  // 17: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult
	(*RefundResult)(nil),                    // 18: net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult
	(*CloseShiftResult)(nil),                // 19: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShiftResult
	(*ParsedCheck)(nil),                     // 20: net.vseinstrumenti.git.fd.proto.cashdesk.ParsedCheck
	(*ReceiptInfo)(nil),                     // 21: net.vseinstrumenti.git.fd.proto.cashdesk.ReceiptInfo
	(*PaymentInfo)(nil),                     // 22: net.vseinstrumenti.git.fd.proto.cashdesk.PaymentInfo
	(*SlipCheck)(nil),                       // 23: net.vseinstrumenti.git.fd.proto.cashdesk.SlipCheck
	(*SendEventResultResponse)(nil),         // 24: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultResponse
	(*structpb.Struct)(nil),                 // 25: google.protobuf.Struct
}
var file_grpc_cashdesk_cashdesk_proto_depIdxs = []int32{
	0,  // 0: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.operation_type:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.OPERATION_TYPE
	6,  // 1: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.purchase:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Purchase
	9,  // 2: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.refund:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Refund
	10, // 3: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.close_shift:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift
	11, // 4: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.report:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Report
	12, // 5: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.cash_income:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CashIncome
	13, // 6: net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse.cash_outcome:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CashOutcome
	8,  // 7: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.goods:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Product
	7,  // 8: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.payments:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Payment
	25, // 9: net.vseinstrumenti.git.fd.proto.cashdesk.Purchase.tags:type_name -> google.protobuf.Struct
	25, // 10: net.vseinstrumenti.git.fd.proto.cashdesk.Product.tags:type_name -> google.protobuf.Struct
	8,  // 11: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.goods:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Product
	7,  // 12: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.payments:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Payment
	25, // 13: net.vseinstrumenti.git.fd.proto.cashdesk.Refund.tags:type_name -> google.protobuf.Struct
	1,  // 14: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift.device_type:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CloseShift.DEVICE_TYPE
	2,  // 15: net.vseinstrumenti.git.fd.proto.cashdesk.Report.types:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.Report.REPORT_TYPE
	3,  // 16: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest.status:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest.STATUS
	16, // 17: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest.result:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult
	15, // 18: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest.error:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestError
	0,  // 19: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult.operation_type:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.OPERATION_TYPE
	17, // 20: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult.purchase:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult
	18, // 21: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult.refund:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult
	19, // 22: net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequestResult.close_shift:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.CloseShiftResult
	22, // 23: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult.payment:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PaymentInfo
	21, // 24: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult.checks:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.ReceiptInfo
	25, // 25: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult.z_info:type_name -> google.protobuf.Struct
	25, // 26: net.vseinstrumenti.git.fd.proto.cashdesk.PurchaseResult.mark:type_name -> google.protobuf.Struct
	22, // 27: net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult.payment:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.PaymentInfo
	21, // 28: net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult.checks:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.ReceiptInfo
	25, // 29: net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult.z_info:type_name -> google.protobuf.Struct
	25, // 30: net.vseinstrumenti.git.fd.proto.cashdesk.RefundResult.mark:type_name -> google.protobuf.Struct
	25, // 31: net.vseinstrumenti.git.fd.proto.cashdesk.CloseShiftResult.z_info:type_name -> google.protobuf.Struct
	23, // 32: net.vseinstrumenti.git.fd.proto.cashdesk.ParsedCheck.first:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.SlipCheck
	23, // 33: net.vseinstrumenti.git.fd.proto.cashdesk.ParsedCheck.second:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.SlipCheck
	20, // 34: net.vseinstrumenti.git.fd.proto.cashdesk.ReceiptInfo.parsed_check:type_name -> net.vseinstrumenti.git.fd.proto.cashdesk.ParsedCheck
	4,  // 35: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.StreamWorkstationEvents:input_type -> net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsRequest
	14, // 36: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.SendEventResult:input_type -> net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultRequest
	5,  // 37: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.StreamWorkstationEvents:output_type -> net.vseinstrumenti.git.fd.proto.cashdesk.StreamWorkstationEventsResponse
	24, // 38: net.vseinstrumenti.git.fd.proto.cashdesk.Cashdesk.SendEventResult:output_type -> net.vseinstrumenti.git.fd.proto.cashdesk.SendEventResultResponse
	37, // [37:39] is the sub-list for method output_type
	35, // [35:37] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_grpc_cashdesk_cashdesk_proto_init() }
func file_grpc_cashdesk_cashdesk_proto_init() {
	if File_grpc_cashdesk_cashdesk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_cashdesk_cashdesk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWorkstationEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamWorkstationEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Refund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShift); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashIncome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CashOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResultRequestError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResultRequestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseShiftResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsedCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlipCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_cashdesk_cashdesk_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendEventResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_grpc_cashdesk_cashdesk_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_cashdesk_cashdesk_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_cashdesk_cashdesk_proto_goTypes,
		DependencyIndexes: file_grpc_cashdesk_cashdesk_proto_depIdxs,
		EnumInfos:         file_grpc_cashdesk_cashdesk_proto_enumTypes,
		MessageInfos:      file_grpc_cashdesk_cashdesk_proto_msgTypes,
	}.Build()
	File_grpc_cashdesk_cashdesk_proto = out.File
	file_grpc_cashdesk_cashdesk_proto_rawDesc = nil
	file_grpc_cashdesk_cashdesk_proto_goTypes = nil
	file_grpc_cashdesk_cashdesk_proto_depIdxs = nil
}
